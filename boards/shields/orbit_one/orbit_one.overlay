#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>

/ {

    chosen {
        zmk,physical-layout = &physical_layout0;
    };
  
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |                 | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |
// | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |                 | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |
// | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |                 | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |
//                      | SW29 | SW28 | SW27 |                 | SW27 | SW28 | SW29 |
        map = <
RC(0,5) RC(0,4) RC(0,3) RC(0,2) RC(0,1) RC(0,0)                   RC(0,6) RC(0,7) RC(0,8)  RC(0,9) RC(0,10) RC(0,11)
RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)                   RC(1,6) RC(1,7) RC(1,8)  RC(1,9) RC(1,10) RC(1,11)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                   RC(2,6) RC(2,7) RC(2,8)  RC(2,9) RC(2,10) RC(2,11)
                        RC(3,2) RC(3,1) RC(3,0)                   RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        wakeup-source;

        rows = <4>;
        columns = <12>;

        matrix_left {
          kscan = <&kscan_left>;
        };

        matrix_right {
          kscan = <&kscan_right>;
          col-offset = <6>;
        };
    };

    // define duplex matrix
    kscan_left: kscan_left_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        // row1 -> row4
        row-gpios
            = <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        // col1 -> col6
        col-gpios
            = <&pro_micro 19 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 15 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH)>
            ;
    };

    kscan_right: kscan_right_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "row2col";
        // row1 -> row4
        row-gpios
            = <&pro_micro 14 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 16 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH)>
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH)>
            ;
        // col1 -> col6
        col-gpios
            = <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    // Encoder definitions
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    // pointing device
    glidepoint_listener {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;
    };

    physical_layout0: physical_layout_0 {
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";
    };
};

&physical_layout0 {
    kscan = <&kscan0>;
    transform = <&default_transform>;

    keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0   50       0     0     0>
            , <&key_physical_attrs 100 100  100   37       0     0     0>
            , <&key_physical_attrs 100 100  200   12       0     0     0>
            , <&key_physical_attrs 100 100  300    0       0     0     0>
            , <&key_physical_attrs 100 100  400   12       0     0     0>
            , <&key_physical_attrs 100 100  500   25       0     0     0>
            , <&key_physical_attrs 100 100 1050   25       0     0     0>
            , <&key_physical_attrs 100 100 1150   12       0     0     0>
            , <&key_physical_attrs 100 100 1250    0       0     0     0>
            , <&key_physical_attrs 100 100 1350   12       0     0     0>
            , <&key_physical_attrs 100 100 1450   37       0     0     0>
            , <&key_physical_attrs 100 100 1550   50       0     0     0>
            , <&key_physical_attrs 100 100    0  150       0     0     0>
            , <&key_physical_attrs 100 100  100  137       0     0     0>
            , <&key_physical_attrs 100 100  200  112       0     0     0>
            , <&key_physical_attrs 100 100  300  100       0     0     0>
            , <&key_physical_attrs 100 100  400  112       0     0     0>
            , <&key_physical_attrs 100 100  500  125       0     0     0>
            , <&key_physical_attrs 100 100 1050  125       0     0     0>
            , <&key_physical_attrs 100 100 1150  112       0     0     0>
            , <&key_physical_attrs 100 100 1250  100       0     0     0>
            , <&key_physical_attrs 100 100 1350  112       0     0     0>
            , <&key_physical_attrs 100 100 1450  137       0     0     0>
            , <&key_physical_attrs 100 100 1550  150       0     0     0>
            , <&key_physical_attrs 100 100    0  250       0     0     0>
            , <&key_physical_attrs 100 100  100  237       0     0     0>
            , <&key_physical_attrs 100 100  200  212       0     0     0>
            , <&key_physical_attrs 100 100  300  200       0     0     0>
            , <&key_physical_attrs 100 100  400  212       0     0     0>
            , <&key_physical_attrs 100 100  500  225       0     0     0>
            , <&key_physical_attrs 100 100 1050  225       0     0     0>
            , <&key_physical_attrs 100 100 1150  212       0     0     0>
            , <&key_physical_attrs 100 100 1250  200       0     0     0>
            , <&key_physical_attrs 100 100 1350  212       0     0     0>
            , <&key_physical_attrs 100 100 1450  237       0     0     0>
            , <&key_physical_attrs 100 100 1550  250       0     0     0>
            , <&key_physical_attrs 100 100  250  312       0     0     0>
            , <&key_physical_attrs 100 100  350  315       0     0     0>
            , <&key_physical_attrs 100 100  450  325       0     0     0>
            , <&key_physical_attrs 100 150  575  300    3000   625   375>
            , <&key_physical_attrs 100 150  975  300 (-3000)  1025   375>
            , <&key_physical_attrs 100 100 1100  325       0     0     0>
            , <&key_physical_attrs 100 100 1200  315       0     0     0>
            , <&key_physical_attrs 100 100 1300  315       0     0     0>
            ;

};

&pro_micro_i2c {
    status = "okay";

    glidepoint: glidepoint@0 {
        compatible = "cirque,pinnacle";
        reg = <0>;
        status = "okay";
        dr-gpios = <&pro_micro 3 (GPIO_ACTIVE_HIGH)>;

        sensitivity = "4x";
        sleep;
        no-taps;
    };
};
