/*
 * Copyright (c) 2021-2025 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define ZMK_MOUSE_SCRL_VAL 140

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/japanese_input.dtsi>

#define MAC 1
#define QWER 2
#define GALI 3
#define JAPN 4
#define LOWR 5
#define RAIS 6
#define ADJT 7
#define HYPR 9
#define MOUSE 8

// restore layer click mkp key after 250ms
&mkp_input_listener {
  input-processors = <&zip_temp_layer MOUSE 250>;
};

&msc_input_listener {
  input-processors = <&zip_temp_layer MOUSE 250>;
};

&mmv {
  time-to-max-speed-ms = <300>;             /* <--- How long time until max speed is reached (default: 500) */
};

&lt {
  flavor = "hold-preferred";
};    

/ {
  macros {
      hypr_on: hyprland_on {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&macro_tap &tog_on HYPR>
              , <&macro_tap &sk LGUI>
              ;
      };

      hypr_off: hyprland_off {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings
              = <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>
              , <&macro_tap &tog_off HYPR>
              ;
      };

      lang_jp: lang_jp {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&macro_tap &tog_on JAPN>
              , <&macro_tap &kp LANG1>
              ;
      };

      lang_en: lang_en {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
              = <&macro_tap &tog_off JAPN>
              , <&macro_tap &kp LANG2>
              ;
      };
  };
    
  behaviors {
      
      rot_kp: sensor_rotate_kp {
          compatible = "zmk,behavior-sensor-rotate-var";
          #sensor-binding-cells = <2>;
          bindings = <&kp>, <&kp>;
      };

      rot_msc: sensor_rotate_msc {
          compatible = "zmk,behavior-sensor-rotate-var";
          #sensor-binding-cells = <2>;
          bindings = <&msc>, <&msc>;
          tap-ms = <20>;
      };

      tog_on: toggle_layer_on_only {
          compatible = "zmk,behavior-toggle-layer";
          #binding-cells = <1>;
          display-name = "Toggle Layer On";
          toggle-mode = "on";
      };

      tog_off: toggle_layer_off_only {
          compatible = "zmk,behavior-toggle-layer";
          #binding-cells = <1>;
          display-name = "Toggle Layer Off";
          toggle-mode = "off";
      };

      mt_hypr: mt_hypr {
            compatible = "zmk,behavior-hold-tap";
            display-name = "MT for HYPR";
            bindings = <&kp>, <&hypr_on>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
      };

      lt_lang2: lt_lang2 {
            compatible = "zmk,behavior-hold-tap";
            display-name = "LT for LANG2";
            bindings = <&mo>, <&lang_en>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
      };

      lt_lang1: lt_lang1 {
            compatible = "zmk,behavior-hold-tap";
            display-name = "LT for LANG1";
            bindings = <&mo>, <&lang_jp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
      };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
  &lt ADJT ESC   &to QWER &to GALI &none     &none    &none                     &none    &none    &none     &none   &none    &none
  &none          &none    &none    &none     &none    &none                     &none    &none    &none     &none   &none    &none
  &none          &none    &none    &none     &none    &none                     &none    &none    &none     &none   &none    &none
                                &kp LALT     &none    &none                     &none    &none    &mt_hypr LGUI 0
      >;

        sensor-bindings = <&rot_kp UP DOWN &rot_kp LEFT RIGHT>;
    };
    mac {
      bindings = <
  &none   &none    &none &none     &none    &none                     &none    &none    &none     &none   &none    &none
  &none   &none    &none &none     &none    &none                     &none    &none    &none     &none   &none    &none
  &none   &none    &none &none     &none    &none                     &none    &none    &none     &none   &none    &none
                         &kp LGUI  &none    &none                     &none    &none    &kp LALT
      >;

        sensor-bindings = <&rot_kp UP DOWN &rot_kp LEFT RIGHT>;
    };

    qwerty {
      bindings = <
  &lt ADJT TAB  &kp Q &kp W &kp E     &kp R          &kp T                    &kp Y           &kp U              &kp I     &kp O   &kp P    &kp BSPC
  &kp LCTRL     &kp A &kp S &kp D     &kp F          &kp G                    &kp H           &kp J              &kp K     &kp L   &kp SEMI &kp SQT
  &mt LSHFT ESC &kp Z &kp X &kp C     &kp V          &kp B                    &kp N           &kp M              &kp COMMA &kp DOT &kp FSLH &kp LALT
                            &trans    &lt_lang2 LOWR 0 &kp SPACE                &mt LSHFT ENTER &lt_lang1 RAIS 0 &trans
      >;
      sensor-bindings = <&rot_kp UP DOWN &rot_kp LEFT RIGHT>;
    };

    gallium {
      bindings = <
  &lt ADJT TAB  &kp B &kp L &kp D     &kp C          &kp V                    &kp J           &kp F             &kp O     &kp U    &kp COMMA &kp BSPC
  &kp LCTRL     &kp N &kp R &kp T     &kp S          &kp G                    &kp Y           &kp H             &kp A     &kp E    &kp I     &kp FSLH
  &mt LSHFT ESC &kp X &kp Q &kp M     &kp W          &kp Z                    &kp K           &kp P             &kp SQT   &kp SEMI &kp DOT   &kp LALT
                            &trans  &lt_lang2 LOWR 0 &kp SPACE                &mt LSHFT ENTER &lt_lang1 RAIS 0  &trans
      >;

          sensor-bindings = <&rot_kp UP DOWN &rot_kp LEFT RIGHT>;
    };

    japanese {
      bindings = <
  &lt ADJT TAB  &jp Q B &jp W L &jp E D   &jp R C          &jp T V                  &jp Y J         &jp U F          &jp I O       &jp O U      &jp P COMMA  &kp BSPC
  &kp LCTRL     &jp A N &jp S R &jp D T   &jp F S          &jp G G                  &jp H Y         &jp J H          &jp K A       &jp L E      &jp SEMI I   &kp FSLH
  &mt LSHFT ESC &jp Z X &jp X Q &jp C M   &jp V W          &jp B Z                  &jp N K         &jp M P          &jp COMMA SQT &jp DOT SEMI &jp FSLH DOT &kp LALT
                                &trans    &lt_lang2 LOWR 0 &jp SPACE SPACE          &jp ENTER ENTER &lt_lang1 RAIS 0 &trans
      >;
      sensor-bindings = <&rot_kp UP DOWN &rot_kp LEFT RIGHT>;
    };

    lower {
      bindings = <
  &kp GRAVE &kp N1    &kp N2   &kp N3   &kp N4   &kp N5           &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &kp DEL
  &trans    &kp LCTRL &kp LSFT &kp LALT &kp LGUI &trans           &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &trans
  &trans    &kp F1    &kp F2   &kp F3   &kp F4   &kp F5           &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
                               &trans   &trans   &trans           &trans   &trans   &trans
      >;

          sensor-bindings = <&rot_kp UP DOWN &rot_kp HOME END>;
    };
    raise {
      bindings = <
  &kp TILDE &kp EXCL &kp AT   &kp HASH  &kp DOLLAR &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK &kp LPRN  &kp RPRN &kp DEL
  &trans    &kp LBKT &kp LT   &kp FSLH  &kp GT     &kp RBKT       &trans     &kp MINUS &kp EQUAL &kp GRAVE &kp PIPE &trans
  &trans    &trans   &kp LBRC &kp QMARK &kp RBRC   &trans         &trans     &kp UNDER &kp PLUS  &kp TILDE &kp BSLH &trans
                                 &trans &trans     &trans         &trans     &trans    &trans
      >;

          sensor-bindings = <&rot_kp PG_UP PG_DN &rot_kp LEFT RIGHT>;
    };

    adjust {
      bindings = <
  &trans         &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR      &to QWER &to GALI &trans  &jp_tog 0     &jp_tog 1    &bootloader
  &studio_unlock &bt BT_NXT   &bt BT_PRV   &trans       &trans       &trans          &trans   &trans   &trans  &tog_off MAC  &tog_on MAC  &trans
  &out OUT_TOG   &trans       &trans       &trans       &trans       &trans          &trans   &trans   &trans  &trans        &trans       &trans
                                           &trans       &trans       &trans          &trans   &trans   &trans
      >;
    };

    mouse {
      bindings = <
  &none     &none     &none    &none     &none     &none                     &none    &none     &none     &none   &none     &none
  &kp LCTL  &mkp MCLK &none    &mkp RCLK &mkp LCLK &none                     &none    &mkp LCLK &mkp RCLK &none   &mkp MCLK &none
  &kp LSFT  &none     &none    &none     &none     &none                     &none    &none     &none     &none   &none     &none
                               &none     &none     &none                     &none    &none     &none
      >;

        sensor-bindings = <&rot_msc SCRL_UP SCRL_DOWN &rot_msc SCRL_LEFT SCRL_RIGHT>;
    };

    hypr {
      bindings = <
  &hypr_off ESC &hypr_off N1   &hypr_off N2 &hypr_off N3  &hypr_off N4   &hypr_off N5        &hypr_off N6    &hypr_off N7    &hypr_off N8 &hypr_off N9  &hypr_off N0   &none
  &sk LCTRL     &hypr_off A    &hypr_off S  &hypr_off D   &hypr_off F    &hypr_off G         &hypr_off H     &hypr_off J     &hypr_off K  &hypr_off L   &hypr_off SEMI &none
  &none         &hypr_off Z    &hypr_off X  &hypr_off C   &hypr_off V    &hypr_off B         &hypr_off N     &hypr_off M     &none        &none         &none          &none
                                            &none         &none          &sk LSHIFT          &hypr_off ENTER &none           &none
      >;

          sensor-bindings = <&rot_kp PG_UP PG_DN &rot_kp LEFT RIGHT>;
    };

  };
};
