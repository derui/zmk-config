#define ZMK_MOUSE_SCRL_VAL 140

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
        //zmk,physical-layout = &physical_layout0;
    };
  
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <10>;
// | SW1 | SW4 | SW7 | SW10 | SW13 | SW16 |                 | SW22 | SW25 | SW29 | SW33 | SW36 | SW40 |
// | SW2 | SW5 | SW8 | SW11 | SW14 | SW17 |                 | SW23 | SW27 | SW30 | SW34 | SW37 | SW41 |
// | SW3 | SW6 | SW9 | SW12 | SW15 | SW18 |                 | SW24 | SW28 | SW31 | SW35 | SW38 | SW42 |
//                   | SW19 | SW20 | SW21 |                 | SW43 | SW44 | SW45 |
        map = <
          RC(1,0) RC(2,0) RC(3,0) RC(4,0) RC(5,0) RC(7,6)    RC(0,3) RC(1,3) RC(2,3) RC(4,3) RC(5,3) RC(6,7)
          RC(0,1) RC(2,1) RC(3,1) RC(4,1) RC(5,1) RC(8,6)    RC(0,4) RC(1,4) RC(2,4) RC(3,4) RC(5,4) RC(8,7)
          RC(0,2) RC(1,2) RC(3,2) RC(4,2) RC(5,2) RC(9,6)    RC(0,5) RC(1,5) RC(2,5) RC(3,5) RC(4,5) RC(9,7)
                                  RC(6,8) RC(7,8) RC(9,8)    RC(6,9) RC(7,9) RC(8,9)
        >;
    };

    kscan0: kscan_charlyplex {
      compatible = "zmk,kscan-gpio-charlieplex";
      wakeup-source;

      interrupt-gpios = <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
      
      gpios = <&xiao_d 3  (GPIO_ACTIVE_HIGH)>  // 0
            , <&xiao_d 10 (GPIO_ACTIVE_HIGH)>  // 1
            , <&xiao_d 9  (GPIO_ACTIVE_HIGH)>   // 2
            , <&xiao_d 8  (GPIO_ACTIVE_HIGH)>   // 3
            , <&gpio0 9   (GPIO_ACTIVE_HIGH)>  // 4
            , <&gpio0 10  (GPIO_ACTIVE_HIGH)>  // 5
            ;
    };

    // Encoder definitions
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <72>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <72>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    // auto mouse layer
    /omit-if-no-ref/ zip_temp_layer: zip_temp_layer {
        compatible = "zmk,input-processor-temp-layer";
        #input-processor-cells = <2>;
        excluded-positions = <
            16 // F
            15 // D
            13 // A
            18 // J
            19 // K
            21 // ;
            12 // Ctrl
        >;
    };

    // comment in if you decided to use wireless split
    //wired_split {
    //    compatible = "zmk,wired-split";
    //    device = <&xiao_serial>;
    //};
};

&i2c0 {
    compatible = "nordic,nrf-twim";
    status = "disabled";
};

&qspi {
  status = "disabled";
};

// comment in this node if use wireless spilt
//&xiao_serial {
//  status = "okay";
//};

// enable extra gpios
&uicr {
    nfct-pins-as-gpios;
};
